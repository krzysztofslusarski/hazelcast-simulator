
# =============================================================================
# Hazelcast Version Configuration
# =============================================================================
#
# The workers can be configured to use a specific version of Hazelcast; so
# you don't need to depend on the Hazelcast version provided by the simulator,
# but you can override it with a specific version.
#
# The Hazelcast version can be configured in different ways:
#   outofthebox             : if you are fine with the one provided by the
#                             Simulator itself.
#   maven=version           : if you want to use a specific version from the maven
#                             repository, e.g.
#                                   maven=4.0
#                                   maven=4.1-SNAPSHOT
#                             Local Hazelcast artifacts will be preferred, so you
#                             can checkout e.g. an experimental branch, build the
#                             artifacts locally. This will all be done on the local
#                             machine, not on the agent machine.
#   bringmyown              : if you want to bring your own dependencies. To upload your
#                             dependencies, in the working dir, create an 'upload'
#                             directory. The content of this directory will be
#                             uploaded to the hidden and automatically
#                             added to the classpath of the workers.
#   git=version             : if you want Simulator to use a specific version of
#                             Hazelcast from Git, e.g.:
#                                   git=f0288f713    to build a specific revision
#                                   git=v3.2.3       to build a version from a Git tag
#                                   git=myRepository/myBranch - to build a version
#                                   from a branch in a specific repository.
#                             Use GIT_CUSTOM_REPOSITORIES to specify custom repositories. The main Hazelcast
#                             repository is always named "origin".
#
VERSION_SPEC=outofthebox

#
# URL of Management Center
#
# If set to a valid URL the Management Center will be configured for member nodes.
#
# Example: MANAGEMENT_CENTER_URL=http://localhost:8083/mancenter
#
# Default: none
#
MANAGEMENT_CENTER_URL=none

#
# The update interval for the management center
#
MANAGEMENT_CENTER_UPDATE_INTERVAL=30

#
# Skips the lookup of JARs in the local Maven repository
#
SKIP_LOCAL_MAVEN_REPO_LOOKUP=false

#
# Size of thread pool for Agent to connect to Worker instances.
#
# The default of 0 uses the default number of threads of Netty.
#
AGENT_THREAD_POOL_SIZE = 0

#
# Port for the Agent
#
# Defines the port the Simulator Agent will listens to.
#
AGENT_PORT = 9000

#
# Port for the Hazelcast instance
#
# Defines the port the Hazelcast instances use.
#
HAZELCAST_PORT = 5701

#
# Client Port.
#
# Defines the port the clients connects to. Its default value for HazelcastDriver is HAZELCAST_PORT property value.
#
# CLIENT_PORT = 6701

#
# Interval for WorkerPingThread
#
# Defines the interval for the WorkerPingThread to ping all workers.
# Also defines the LAST_SEEN_TIMEOUT_SECONDS for the WorkerProcessFailureMonitor
# which is this value multiplied by 3.
#
# Set to -1 to disable PING and WORKER_TIMEOUT detection.
#
WORKER_PING_INTERVAL_SECONDS = 60

#
# Shutdown delay for Member Workers
#
# Defines the delay for the shutdown of Member Workers. When the Coordinator sends
# the shutdown operation to all Workers, the Client Workers execute it immediately,
# while the Member Workers will wait the defined seconds. This should prevent
# unnecessary exceptions on the clients, due to their connected Hazelcast Member
# instance being shutdown first.
#
# Will not be used if there are just Member Workers in the cluster.
#
MEMBER_WORKER_SHUTDOWN_DELAY_SECONDS = 5

#
# The frequency the worker should check if the agent it belongs to is still running.
# This prevents ending up with workers that don't have a running agent.
#
# If set to 0, there is no check
#
WORKER_ORPHAN_INTERVAL_SECONDS=5

#
# Timeout to wait for Worker shutdown
#
# Defines the timeout for the Worker shutdown in the Coordinator. After the timeout
# occurred the Coordinator will not wait any longer for Workers to stop. They may
# still be running and must be manually killed before a new Simulator run can be
# started. You can use the Provisioner tool for this task: provisioner --kill
#
# A worker is shutdown if the process isn't running any longer.
# A 'kill -STOP <somepid>' doesn't kill the process but freezes it.
#
WAIT_FOR_WORKER_SHUTDOWN_TIMEOUT_SECONDS = 120

#
# Timeout in seconds to wait for a worker jvm to startup
#
WORKER_STARTUP_TIMEOUT_SECONDS=60

#
# The timeout in seconds waiting for a test to complete after it ends the run phase.
#
TEST_COMPLETION_TIMEOUT_SECONDS=300

#
# Path to a settings.xml to be used when retrieving artifacts via Maven.
#
#
# CUSTOM_MAVEN_SETTINGS=/path/to/settings.xml
